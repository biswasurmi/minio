apiVersion: v1
kind: Namespace
metadata:
  name: minio-tenant
---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  namespace: minio-tenant
stringData:
  MINIO_ROOT_USER: minio
  MINIO_ROOT_PASSWORD: minio123
  MINIO_BROWSER: "on"  # Enables Console
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  name: minio-service
  namespace: minio-tenant
spec:
  type: ClusterIP
  ports:
    - port: 9000
      targetPort: 9000
      name: api
    - port: 9443
      targetPort: 9443
      name: console
  selector:
    app: minio
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: minio-tenant
spec:
  serviceName: minio-service
  replicas: 1  # Single node
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          image: quay.io/minio/minio:RELEASE.2025-04-08T15-41-24Z
          args:
            - server
            - /data{0...3}  # Mount 4 volumes as local "drives"
            - --console-address
            - ":9443"
          env:
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_ROOT_USER
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_ROOT_PASSWORD
            - name: MINIO_BROWSER
              valueFrom:
                secretKeyRef:
                  name: minio-credentials
                  key: MINIO_BROWSER
          ports:
            - containerPort: 9000
              name: api
            - containerPort: 9443
              name: console
          volumeMounts:
            - name: data0
              mountPath: /data0
            - name: data1
              mountPath: /data1
            - name: data2
              mountPath: /data2
            - name: data3
              mountPath: /data3
  volumeClaimTemplates:
    - metadata:
        name: data0
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard
    - metadata:
        name: data1
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard
    - metadata:
        name: data2
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard
    - metadata:
        name: data3
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Gi
        storageClassName: standard